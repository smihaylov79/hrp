# Generated by Django 5.2.1 on 2025-08-01 11:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0006_dailydatainvest'),
    ]

    operations = [
        migrations.CreateModel(
            name='SymbolsMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isin_number', models.CharField(max_length=50, unique=True)),
                ('trade_symbol', models.CharField(blank=True, max_length=25, null=True)),
                ('invest_symbol', models.CharField(blank=True, max_length=25, null=True)),
                ('official_symbol', models.CharField(max_length=25, unique=True)),
                ('name_metatrader', models.CharField(blank=True, max_length=250, null=True)),
                ('official_name', models.CharField(blank=True, max_length=250, null=True)),
                ('industry', models.CharField(blank=True, max_length=255, null=True)),
                ('sector', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('long_business_summary', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FundamentalsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extracted_date', models.DateField()),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('full_time_employees', models.IntegerField(blank=True, null=True)),
                ('ex_dividend_date', models.DateField(blank=True, null=True)),
                ('last_dividend_date', models.DateField(blank=True, null=True)),
                ('dividend_date', models.DateField(blank=True, null=True)),
                ('earnings_call_timestamp_start', models.DateTimeField(blank=True, null=True)),
                ('beta', models.FloatField(blank=True, null=True)),
                ('forward_pe', models.FloatField(blank=True, null=True)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('fifty_two_week_low', models.FloatField(blank=True, null=True)),
                ('fifty_two_week_high', models.FloatField(blank=True, null=True)),
                ('price_to_sales_ttm', models.FloatField(blank=True, null=True)),
                ('fifty_day_average', models.FloatField(blank=True, null=True)),
                ('two_hundred_day_average', models.FloatField(blank=True, null=True)),
                ('enterprise_value', models.BigIntegerField(blank=True, null=True)),
                ('shares_outstanding', models.BigIntegerField(blank=True, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('price_to_book', models.FloatField(blank=True, null=True)),
                ('earnings_quarterly_growth', models.FloatField(blank=True, null=True)),
                ('trailing_eps', models.FloatField(blank=True, null=True)),
                ('forward_eps', models.FloatField(blank=True, null=True)),
                ('eps_ttm', models.FloatField(blank=True, null=True)),
                ('eps_forward', models.FloatField(blank=True, null=True)),
                ('eps_current_year', models.FloatField(blank=True, null=True)),
                ('price_eps_current_year', models.FloatField(blank=True, null=True)),
                ('earnings_growth', models.FloatField(blank=True, null=True)),
                ('revenue_growth', models.FloatField(blank=True, null=True)),
                ('last_dividend_value', models.FloatField(blank=True, null=True)),
                ('enterprise_to_revenue', models.FloatField(blank=True, null=True)),
                ('enterprise_to_ebitda', models.FloatField(blank=True, null=True)),
                ('fifty_two_week_low_change_percent', models.FloatField(blank=True, null=True)),
                ('fifty_two_week_high_change_percent', models.FloatField(blank=True, null=True)),
                ('fifty_two_week_change', models.FloatField(blank=True, null=True)),
                ('target_high_price', models.FloatField(blank=True, null=True)),
                ('target_low_price', models.FloatField(blank=True, null=True)),
                ('target_median_price', models.FloatField(blank=True, null=True)),
                ('recommendation_key', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_analyst_opinions', models.IntegerField(blank=True, null=True)),
                ('average_analyst_rating', models.CharField(blank=True, max_length=50, null=True)),
                ('trailing_peg_ratio', models.FloatField(blank=True, null=True)),
                ('total_cash', models.BigIntegerField(blank=True, null=True)),
                ('total_cash_per_share', models.FloatField(blank=True, null=True)),
                ('ebitda', models.BigIntegerField(blank=True, null=True)),
                ('total_debt', models.BigIntegerField(blank=True, null=True)),
                ('total_revenue', models.BigIntegerField(blank=True, null=True)),
                ('revenue_per_share', models.FloatField(blank=True, null=True)),
                ('gross_profits', models.BigIntegerField(blank=True, null=True)),
                ('operating_cashflow', models.BigIntegerField(blank=True, null=True)),
                ('gross_margins', models.FloatField(blank=True, null=True)),
                ('ebitda_margins', models.FloatField(blank=True, null=True)),
                ('operating_margins', models.FloatField(blank=True, null=True)),
                ('ceo_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ceo_age', models.IntegerField(blank=True, null=True)),
                ('symbol_mapping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.symbolsmapping')),
            ],
        ),
    ]
